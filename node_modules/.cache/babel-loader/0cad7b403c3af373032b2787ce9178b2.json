{"ast":null,"code":"var _jsxFileName = \"E:\\\\proyectos-web\\\\react-sticky-notes\\\\src\\\\components\\\\NoteList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport NewNote from \"./NewNote\";\nimport Note from \"./Note\";\nimport \"./noteList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteList = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = task => {\n    console.log(task);\n\n    if (task.text.trim()) {\n      task.text = task.text.trim();\n      const updtatedTasks = [task, ...tasks];\n      setTasks(updtatedTasks);\n    }\n  };\n\n  const setLocalStorage = value => {\n    try {\n      setTasks(value);\n      window.localStorage.setItem(\"text\", value);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" notelist\",\n      children: [/*#__PURE__*/_jsxDEV(NewNote, {\n        onSubmit: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Note, {\n        id: task.id,\n        text: task.text\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteList, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n\n_c = NoteList;\nexport default NoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"sources":["E:/proyectos-web/react-sticky-notes/src/components/NoteList.js"],"names":["React","useState","NewNote","Note","NoteList","tasks","setTasks","addTask","task","console","log","text","trim","updtatedTasks","setLocalStorage","value","window","localStorage","setItem","error","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAIC,IAAD,IAAU;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAIA,IAAI,CAACG,IAAL,CAAUC,IAAV,EAAJ,EAAsB;AACpBJ,MAAAA,IAAI,CAACG,IAAL,GAAYH,IAAI,CAACG,IAAL,CAAUC,IAAV,EAAZ;AACA,YAAMC,aAAa,GAAG,CAACL,IAAD,EAAO,GAAGH,KAAV,CAAtB;AACAC,MAAAA,QAAQ,CAACO,aAAD,CAAR;AACD;AACF,GAPD;;AAQA,QAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAI;AACFT,MAAAA,QAAQ,CAACS,KAAD,CAAR;AACAC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,EAAoCH,KAApC;AACD,KAHD,CAGE,OAAOI,KAAP,EAAc;AACdV,MAAAA,OAAO,CAACU,KAAR,CAAcA,KAAd;AACD;AACF,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAEZ;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,KAAK,CAACe,GAAN,CAAWZ,IAAD,iBACT,QAAC,IAAD;AAAoB,QAAA,EAAE,EAAEA,IAAI,CAACa,EAA7B;AAAiC,QAAA,IAAI,EAAEb,IAAI,CAACG;AAA5C,SAAWH,IAAI,CAACa,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA9BD;;GAAMjB,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport NewNote from \"./NewNote\";\r\nimport Note from \"./Note\";\r\nimport \"./noteList.css\";\r\n\r\nconst NoteList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const addTask = (task) => {\r\n    console.log(task);\r\n    if (task.text.trim()) {\r\n      task.text = task.text.trim();\r\n      const updtatedTasks = [task, ...tasks];\r\n      setTasks(updtatedTasks);\r\n    }\r\n  };\r\n  const setLocalStorage = (value) => {\r\n    try {\r\n      setTasks(value);\r\n      window.localStorage.setItem(\"text\", value);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\" notelist\">\r\n        <NewNote onSubmit={addTask} />\r\n        {tasks.map((task) => (\r\n          <Note key={task.id} id={task.id} text={task.text} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n"]},"metadata":{},"sourceType":"module"}