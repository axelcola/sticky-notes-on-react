{"ast":null,"code":"var _jsxFileName = \"E:\\\\proyectos-web\\\\react-sticky-notes\\\\src\\\\components\\\\NoteList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NavbarNotes from \"./NavbarNotes\";\nimport NewNote from \"./NewNote\";\nimport Note from \"./Note\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./noteList.css\";\nimport { getCurrentDate } from \"./getDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NoteList = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]); // ..........................................................\n  // Function to add a note with the fixed button in de screen\n\n  const [input, setInput] = useState(\"\");\n  const [color, setColor] = useState(\"turquoise\");\n\n  const newNoteData = (text, colorProps) => {\n    setInput(text);\n    setColor(colorProps);\n    console.log(input, color, text, colorProps);\n  };\n\n  const noteSubmit = () => {\n    const newTask = {\n      id: uuidv4(),\n      text: input,\n      deleted: false,\n      date: getCurrentDate(),\n      color: \"yellow\",\n      placeholder: \"Empty Note\"\n    };\n    addTask(newTask);\n    document.getElementById(\"inputNote\").value = \"\";\n    setColor(\"turquoise\");\n    setInput(\"\");\n  }; // ............................................................\n  // ............................................................\n\n\n  const addTask = task => {\n    task.text = task.text.trim();\n    const updtatedTasks = [task, ...tasks];\n    setTasks(updtatedTasks);\n    window.localStorage.setItem(\"notes\", JSON.stringify(updtatedTasks));\n  };\n\n  const searcherInfo = textsearch => {\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\n    if (savedTasks) setTasks(savedTasks);\n\n    if (textsearch) {\n      const results = savedTasks.filter(task => task.text.toLowerCase().includes(textsearch));\n      setTasks(results);\n    }\n  };\n\n  const editNote = note => {\n    const noteToChange = tasks.map(task => {\n      if (task.id === note.id) {\n        task.text = note.text;\n        task.color = note.color;\n      }\n\n      return task;\n    });\n    setTasks(noteToChange);\n    window.localStorage.setItem(\"notes\", JSON.stringify(noteToChange));\n  };\n\n  const deleteNote = id => {\n    const deletedNotes = tasks.map(task => {\n      if (task.id === id) {\n        task.deleted = !task.deleted;\n      }\n\n      return task;\n    });\n    setTasks(deletedNotes);\n    window.localStorage.setItem(\"notes\", JSON.stringify(deletedNotes));\n  };\n\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\n    if (savedTasks) setTasks(savedTasks);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarNotes, {\n      number: tasks,\n      searcher: searcherInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" notelist\",\n        children: [/*#__PURE__*/_jsxDEV(NewNote, {\n          onSubmit: addTask,\n          newNoteData: newNoteData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Note, {\n          id: task.id,\n          text: task.text,\n          deleted: task.deleted,\n          date: task.date,\n          deleteNote: deleteNote,\n          className: task.deleted ? \"deleted\" : \"\",\n          color: task.color,\n          editNote: editNote,\n          placeholder: task.placeholder\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), tasks.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-note-fixed\",\n        onClick: noteSubmit,\n        children: /*#__PURE__*/_jsxDEV(AiOutlinePlusCircle, {\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n};\n\n_s(NoteList, \"jXYK2g1qjCZYKLMWc4PoF9oZBCE=\");\n\n_c = NoteList;\nexport default NoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"sources":["E:/proyectos-web/react-sticky-notes/src/components/NoteList.js"],"names":["React","useEffect","useState","NavbarNotes","NewNote","Note","AiOutlinePlusCircle","v4","uuidv4","getCurrentDate","NoteList","tasks","setTasks","input","setInput","color","setColor","newNoteData","text","colorProps","console","log","noteSubmit","newTask","id","deleted","date","placeholder","addTask","document","getElementById","value","task","trim","updtatedTasks","window","localStorage","setItem","JSON","stringify","searcherInfo","textsearch","savedTasks","parse","getItem","results","filter","toLowerCase","includes","editNote","note","noteToChange","map","deleteNote","deletedNotes","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NavbarNotes from \"./NavbarNotes\";\r\nimport NewNote from \"./NewNote\";\r\nimport Note from \"./Note\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./noteList.css\";\r\nimport { getCurrentDate } from \"./getDate\";\r\n\r\nconst NoteList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  // ..........................................................\r\n  // Function to add a note with the fixed button in de screen\r\n  const [input, setInput] = useState(\"\");\r\n  const [color, setColor] = useState(\"turquoise\");\r\n\r\n  const newNoteData = (text, colorProps) => {\r\n    setInput(text);\r\n    setColor(colorProps);\r\n    console.log(input, color, text, colorProps);\r\n  };\r\n  const noteSubmit = () => {\r\n    const newTask = {\r\n      id: uuidv4(),\r\n      text: input,\r\n      deleted: false,\r\n      date: getCurrentDate(),\r\n      color: \"yellow\",\r\n      placeholder: \"Empty Note\",\r\n    };\r\n    addTask(newTask);\r\n    document.getElementById(\"inputNote\").value = \"\";\r\n    setColor(\"turquoise\");\r\n    setInput(\"\");\r\n  };\r\n  // ............................................................\r\n  // ............................................................\r\n  const addTask = (task) => {\r\n    task.text = task.text.trim();\r\n    const updtatedTasks = [task, ...tasks];\r\n    setTasks(updtatedTasks);\r\n    window.localStorage.setItem(\"notes\", JSON.stringify(updtatedTasks));\r\n  };\r\n  const searcherInfo = (textsearch) => {\r\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\r\n    if (savedTasks) setTasks(savedTasks);\r\n    if (textsearch) {\r\n      const results = savedTasks.filter((task) =>\r\n        task.text.toLowerCase().includes(textsearch)\r\n      );\r\n      setTasks(results);\r\n    }\r\n  };\r\n  const editNote = (note) => {\r\n    const noteToChange = tasks.map((task) => {\r\n      if (task.id === note.id) {\r\n        task.text = note.text;\r\n        task.color = note.color;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(noteToChange);\r\n    window.localStorage.setItem(\"notes\", JSON.stringify(noteToChange));\r\n  };\r\n\r\n  const deleteNote = (id) => {\r\n    const deletedNotes = tasks.map((task) => {\r\n      if (task.id === id) {\r\n        task.deleted = !task.deleted;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(deletedNotes);\r\n    window.localStorage.setItem(\"notes\", JSON.stringify(deletedNotes));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\r\n    if (savedTasks) setTasks(savedTasks);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <NavbarNotes number={tasks} searcher={searcherInfo} />\r\n      <div className=\"container\">\r\n        <div className=\" notelist\">\r\n          <NewNote onSubmit={addTask} newNoteData={newNoteData} />\r\n          {tasks.map((task) => (\r\n            <Note\r\n              key={task.id}\r\n              id={task.id}\r\n              text={task.text}\r\n              deleted={task.deleted}\r\n              date={task.date}\r\n              deleteNote={deleteNote}\r\n              className={task.deleted ? \"deleted\" : \"\"}\r\n              color={task.color}\r\n              editNote={editNote}\r\n              placeholder={task.placeholder}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {tasks.length ? (\r\n        <>\r\n          <button className=\"new-note-fixed\" onClick={noteSubmit}>\r\n            <AiOutlinePlusCircle size={40} />\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n"]},"metadata":{},"sourceType":"module"}