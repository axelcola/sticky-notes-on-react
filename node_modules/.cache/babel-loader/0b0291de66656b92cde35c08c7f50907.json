{"ast":null,"code":"var _jsxFileName = \"E:\\\\proyectos-web\\\\react-sticky-notes\\\\src\\\\components\\\\NoteList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NavbarNotes from \"./NavbarNotes\";\nimport NewNote from \"./NewNote\";\nimport Note from \"./Note\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./noteList.css\";\nimport { getCurrentDate } from \"./getDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NoteList = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [color, setColor] = useState(\"turquoise\");\n\n  const newNoteData = (text, colorProps) => {\n    setInput(text);\n    setColor(colorProps);\n    console.log(input, color, text, colorProps);\n  };\n\n  const addTask = task => {\n    task.text = task.text.trim();\n    const updtatedTasks = [task, ...tasks];\n    setTasks(updtatedTasks);\n    window.localStorage.setItem(\"notes\", JSON.stringify(updtatedTasks));\n  };\n\n  const searcherInfo = textsearch => {\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\n    if (savedTasks) setTasks(savedTasks);\n\n    if (textsearch) {\n      const results = savedTasks.filter(task => task.text.toLowerCase().includes(textsearch));\n      setTasks(results);\n    }\n  };\n\n  const editNote = note => {\n    const noteToChange = tasks.map(task => {\n      if (task.id === note.id) {\n        task.text = note.text;\n        task.color = note.color;\n      }\n\n      return task;\n    });\n    setTasks(noteToChange);\n    window.localStorage.setItem(\"notes\", JSON.stringify(noteToChange));\n  };\n\n  const deleteNote = id => {\n    const deletedNotes = tasks.map(task => {\n      if (task.id === id) {\n        task.deleted = !task.deleted;\n      }\n\n      return task;\n    });\n    setTasks(deletedNotes);\n    window.localStorage.setItem(\"notes\", JSON.stringify(deletedNotes));\n  };\n\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\n    if (savedTasks) setTasks(savedTasks);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarNotes, {\n      number: tasks,\n      searcher: searcherInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" notelist\",\n        children: [/*#__PURE__*/_jsxDEV(NewNote, {\n          onSubmit: addTask,\n          newNoteData: newNoteData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Note, {\n          id: task.id,\n          text: task.text,\n          deleted: task.deleted,\n          date: task.date,\n          deleteNote: deleteNote,\n          className: task.deleted ? \"deleted\" : \"\",\n          color: task.color,\n          editNote: editNote,\n          placeholder: task.placeholder\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-note-fixed\",\n      children: /*#__PURE__*/_jsxDEV(AiOutlinePlusCircle, {\n        size: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NoteList, \"jXYK2g1qjCZYKLMWc4PoF9oZBCE=\");\n\n_c = NoteList;\nexport default NoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"sources":["E:/proyectos-web/react-sticky-notes/src/components/NoteList.js"],"names":["React","useEffect","useState","NavbarNotes","NewNote","Note","AiOutlinePlusCircle","v4","uuidv4","getCurrentDate","NoteList","tasks","setTasks","input","setInput","color","setColor","newNoteData","text","colorProps","console","log","addTask","task","trim","updtatedTasks","window","localStorage","setItem","JSON","stringify","searcherInfo","textsearch","savedTasks","parse","getItem","results","filter","toLowerCase","includes","editNote","note","noteToChange","map","id","deleteNote","deletedNotes","deleted","date","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NavbarNotes from \"./NavbarNotes\";\r\nimport NewNote from \"./NewNote\";\r\nimport Note from \"./Note\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./noteList.css\";\r\nimport { getCurrentDate } from \"./getDate\";\r\n\r\nconst NoteList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [color, setColor] = useState(\"turquoise\");\r\n\r\n  const newNoteData = (text, colorProps) => {\r\n    setInput(text);\r\n    setColor(colorProps);\r\n    console.log(input, color, text, colorProps);\r\n  };\r\n\r\n  const addTask = (task) => {\r\n    task.text = task.text.trim();\r\n    const updtatedTasks = [task, ...tasks];\r\n    setTasks(updtatedTasks);\r\n    window.localStorage.setItem(\"notes\", JSON.stringify(updtatedTasks));\r\n  };\r\n  const searcherInfo = (textsearch) => {\r\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\r\n    if (savedTasks) setTasks(savedTasks);\r\n    if (textsearch) {\r\n      const results = savedTasks.filter((task) =>\r\n        task.text.toLowerCase().includes(textsearch)\r\n      );\r\n      setTasks(results);\r\n    }\r\n  };\r\n  const editNote = (note) => {\r\n    const noteToChange = tasks.map((task) => {\r\n      if (task.id === note.id) {\r\n        task.text = note.text;\r\n        task.color = note.color;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(noteToChange);\r\n    window.localStorage.setItem(\"notes\", JSON.stringify(noteToChange));\r\n  };\r\n\r\n  const deleteNote = (id) => {\r\n    const deletedNotes = tasks.map((task) => {\r\n      if (task.id === id) {\r\n        task.deleted = !task.deleted;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(deletedNotes);\r\n    window.localStorage.setItem(\"notes\", JSON.stringify(deletedNotes));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\r\n    if (savedTasks) setTasks(savedTasks);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <NavbarNotes number={tasks} searcher={searcherInfo} />\r\n      <div className=\"container\">\r\n        <div className=\" notelist\">\r\n          <NewNote onSubmit={addTask} newNoteData={newNoteData} />\r\n          {tasks.map((task) => (\r\n            <Note\r\n              key={task.id}\r\n              id={task.id}\r\n              text={task.text}\r\n              deleted={task.deleted}\r\n              date={task.date}\r\n              deleteNote={deleteNote}\r\n              className={task.deleted ? \"deleted\" : \"\"}\r\n              color={task.color}\r\n              editNote={editNote}\r\n              placeholder={task.placeholder}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <button className=\"new-note-fixed\">\r\n        <AiOutlinePlusCircle size={40} />\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n"]},"metadata":{},"sourceType":"module"}