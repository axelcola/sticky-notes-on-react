{"ast":null,"code":"var _jsxFileName = \"E:\\\\proyectos-web\\\\react-sticky-notes\\\\src\\\\components\\\\NewNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./newNote.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BiCommentAdd } from \"react-icons/bi\";\nimport { IoIosColorPalette } from \"react-icons/io\";\nimport { BsFillCircleFill } from \"react-icons/bs\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { getCurrentDate } from \"./getDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewNote = props => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [color, setColor] = useState(\"newNote\");\n\n  const textInput = e => {\n    setInput(e.target.value);\n  };\n\n  const textSubmit = e => {\n    e.preventDefault();\n    const newTask = {\n      id: uuidv4(),\n      text: input,\n      deleted: false,\n      date: getCurrentDate(),\n      color: color\n    };\n    props.onSubmit(newTask);\n    document.getElementById(\"inputNote\").value = \"\";\n    setColor(\"newNote\");\n  };\n\n  const changeColor = newColor => {\n    setColor(newColor);\n    console.log(color);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: textSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `note ${color}`,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"inputNote\",\n        onChange: textInput,\n        className: `addNote-text-area ${color}`,\n        placeholder: \"Add a new task..\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"containter-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `button-newnote ${color}`,\n              children: [\" \", /*#__PURE__*/_jsxDEV(BiCommentAdd, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button\",\n              children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                className: \"button newNote\",\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                  variant: \"none\",\n                  children: /*#__PURE__*/_jsxDEV(IoIosColorPalette, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                  className: \"dropdown-target\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"drops-buttons squere red\",\n                    name: \"group1\",\n                    value: \"red\",\n                    type: \"radio\",\n                    id: \"radio-1\",\n                    checked: color === \"red\" ? true : false,\n                    onClick: () => changeColor(\"red\"),\n                    children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      className: \"drop-items\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"drops-buttons squere yellow\",\n                    name: \"group1\",\n                    type: \"radio\",\n                    value: \"yellow\",\n                    id: \"radio-2\",\n                    checked: color === \"yellow\" ? true : false,\n                    onClick: () => changeColor(\"yellow\"),\n                    children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      className: \"drop-items\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"drops-buttons squere green\",\n                    name: \"group1\",\n                    type: \"radio\",\n                    value: \"green\",\n                    id: \"radio-3\",\n                    checked: color === \"green\" ? true : false,\n                    onClick: () => changeColor(\"green\"),\n                    children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      className: \"drop-items\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"color-indicator\",\n              children: /*#__PURE__*/_jsxDEV(BsFillCircleFill, {\n                id: \"red\",\n                className: `circle indicator ${color}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewNote, \"UwCYM7giCWzfsqAgHz4ee52I1A0=\");\n\n_c = NewNote;\nexport default NewNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewNote\");","map":{"version":3,"sources":["E:/proyectos-web/react-sticky-notes/src/components/NewNote.js"],"names":["React","useState","v4","uuidv4","BiCommentAdd","IoIosColorPalette","BsFillCircleFill","Dropdown","getCurrentDate","NewNote","props","input","setInput","color","setColor","textInput","e","target","value","textSubmit","preventDefault","newTask","id","text","deleted","date","onSubmit","document","getElementById","changeColor","newColor","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./newNote.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { BiCommentAdd } from \"react-icons/bi\";\r\nimport { IoIosColorPalette } from \"react-icons/io\";\r\nimport { BsFillCircleFill } from \"react-icons/bs\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { getCurrentDate } from \"./getDate\";\r\n\r\nconst NewNote = (props) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [color, setColor] = useState(\"newNote\");\r\n\r\n  const textInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const textSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      id: uuidv4(),\r\n      text: input,\r\n      deleted: false,\r\n      date: getCurrentDate(),\r\n      color: color,\r\n    };\r\n    props.onSubmit(newTask);\r\n    document.getElementById(\"inputNote\").value = \"\";\r\n    setColor(\"newNote\");\r\n  };\r\n\r\n  const changeColor = (newColor) => {\r\n    setColor(newColor);\r\n    console.log(color);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={textSubmit}>\r\n      <div className={`note ${color}`}>\r\n        <textarea\r\n          id=\"inputNote\"\r\n          onChange={textInput}\r\n          className={`addNote-text-area ${color}`}\r\n          placeholder=\"Add a new task..\"\r\n          type=\"text\"\r\n        ></textarea>\r\n        <div className=\"dropdown\">\r\n          <div className=\"note-content\">\r\n            <div className=\"containter-buttons\">\r\n              <button className={`button-newnote ${color}`}>\r\n                {\" \"}\r\n                <BiCommentAdd />\r\n              </button>\r\n              <div className=\"button\">\r\n                <Dropdown className=\"button newNote\">\r\n                  <Dropdown.Toggle variant=\"none\">\r\n                    <IoIosColorPalette />\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu className=\"dropdown-target\">\r\n                    <button\r\n                      className=\"drops-buttons squere red\"\r\n                      name=\"group1\"\r\n                      value=\"red\"\r\n                      type=\"radio\"\r\n                      id=\"radio-1\"\r\n                      checked={color === \"red\" ? true : false}\r\n                      onClick={() => changeColor(\"red\")}\r\n                    >\r\n                      <Dropdown.Item className=\"drop-items\"></Dropdown.Item>\r\n                    </button>\r\n                    <button\r\n                      className=\"drops-buttons squere yellow\"\r\n                      name=\"group1\"\r\n                      type=\"radio\"\r\n                      value=\"yellow\"\r\n                      id=\"radio-2\"\r\n                      checked={color === \"yellow\" ? true : false}\r\n                      onClick={() => changeColor(\"yellow\")}\r\n                    >\r\n                      <Dropdown.Item className=\"drop-items\"></Dropdown.Item>\r\n                    </button>\r\n                    <button\r\n                      className=\"drops-buttons squere green\"\r\n                      name=\"group1\"\r\n                      type=\"radio\"\r\n                      value=\"green\"\r\n                      id=\"radio-3\"\r\n                      checked={color === \"green\" ? true : false}\r\n                      onClick={() => changeColor(\"green\")}\r\n                    >\r\n                      <Dropdown.Item className=\"drop-items\"></Dropdown.Item>\r\n                    </button>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </div>\r\n              <div className=\"color-indicator\">\r\n                <BsFillCircleFill\r\n                  id=\"red\"\r\n                  className={`circle indicator ${color}`}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewNote;\r\n"]},"metadata":{},"sourceType":"module"}