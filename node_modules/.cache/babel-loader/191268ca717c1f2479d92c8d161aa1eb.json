{"ast":null,"code":"var _jsxFileName = \"E:\\\\proyectos-web\\\\react-sticky-notes\\\\src\\\\components\\\\NoteList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewNote from \"./NewNote\";\nimport Note from \"./Note\";\nimport \"./noteList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteList = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = task => {\n    if (task.text.trim()) {\n      task.text = task.text.trim();\n      const updtatedTasks = [task, ...tasks];\n      setTasks(updtatedTasks);\n      window.localStorage.setItem(\"notes\", JSON.stringify(updtatedTasks));\n    }\n  };\n\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\n    if (savedTasks) setTasks(savedTasks);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" notelist\",\n      children: [/*#__PURE__*/_jsxDEV(NewNote, {\n        onSubmit: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), tasks.map(task => {\n        if (task.deleted === false) {\n          /*#__PURE__*/\n          _jsxDEV(Note, {\n            id: task.id,\n            text: task.text,\n            deleted: task.deleted\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = NoteList;\nexport default NoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"sources":["E:/proyectos-web/react-sticky-notes/src/components/NoteList.js"],"names":["React","useEffect","useState","NewNote","Note","NoteList","tasks","setTasks","addTask","task","text","trim","updtatedTasks","window","localStorage","setItem","JSON","stringify","savedTasks","parse","getItem","map","deleted","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAIA,IAAI,CAACC,IAAL,CAAUC,IAAV,EAAJ,EAAsB;AACpBF,MAAAA,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACC,IAAL,CAAUC,IAAV,EAAZ;AACA,YAAMC,aAAa,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAtB;AACAC,MAAAA,QAAQ,CAACK,aAAD,CAAR;AACAC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCC,IAAI,CAACC,SAAL,CAAeL,aAAf,CAArC;AACD;AACF,GAPD;;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,UAAU,GAAGF,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAX,CAAnB;AACA,QAAIF,UAAJ,EAAgBX,QAAQ,CAACW,UAAD,CAAR;AACjB,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAEV;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,KAAK,CAACe,GAAN,CAAWZ,IAAD,IAAU;AACnB,YAAIA,IAAI,CAACa,OAAL,KAAiB,KAArB,EAA4B;AAC1B;AAAA,kBAAC,IAAD;AAEE,YAAA,EAAE,EAAEb,IAAI,CAACc,EAFX;AAGE,YAAA,IAAI,EAAEd,IAAI,CAACC,IAHb;AAIE,YAAA,OAAO,EAAED,IAAI,CAACa;AAJhB,aACOb,IAAI,CAACc,EADZ;AAAA;AAAA;AAAA;AAAA;AAMD;AACF,OATA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAjCD;;GAAMlB,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NewNote from \"./NewNote\";\r\nimport Note from \"./Note\";\r\nimport \"./noteList.css\";\r\n\r\nconst NoteList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const addTask = (task) => {\r\n    if (task.text.trim()) {\r\n      task.text = task.text.trim();\r\n      const updtatedTasks = [task, ...tasks];\r\n      setTasks(updtatedTasks);\r\n      window.localStorage.setItem(\"notes\", JSON.stringify(updtatedTasks));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\r\n    if (savedTasks) setTasks(savedTasks);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\" notelist\">\r\n        <NewNote onSubmit={addTask} />\r\n        {tasks.map((task) => {\r\n          if (task.deleted === false) {\r\n            <Note\r\n              key={task.id}\r\n              id={task.id}\r\n              text={task.text}\r\n              deleted={task.deleted}\r\n            />;\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n"]},"metadata":{},"sourceType":"module"}