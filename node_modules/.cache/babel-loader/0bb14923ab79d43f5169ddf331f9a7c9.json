{"ast":null,"code":"import _toConsumableArray from\"E:/proyectos-web/react-sticky-notes/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"E:/proyectos-web/react-sticky-notes/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import NavbarNotes from\"./NavbarNotes\";import NewNote from\"./NewNote\";import Note from\"./Note\";import{AiOutlinePlusCircle}from\"react-icons/ai\";import\"./noteList.css\";import Searcher from\"./Searcher\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NoteList=function NoteList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var addTask=function addTask(task){if(task.text.trim()){task.text=task.text.trim();var updtatedTasks=[task].concat(_toConsumableArray(tasks));setTasks(updtatedTasks);window.localStorage.setItem(\"notes\",JSON.stringify(updtatedTasks));}};var searcherInfo=function searcherInfo(textsearch){var savedTasks=JSON.parse(localStorage.getItem(\"notes\"));if(savedTasks)setTasks(savedTasks);if(textsearch){var results=savedTasks.filter(function(task){return task.text.toLowerCase().includes(textsearch);});setTasks(results);}};var editNote=function editNote(note){var noteToChange=tasks.map(function(task){if(task.id===note.id){task.text=note.text;task.color=note.color;}return task;});setTasks(noteToChange);window.localStorage.setItem(\"notes\",JSON.stringify(noteToChange));};var deleteNote=function deleteNote(id){var deletedNotes=tasks.map(function(task){if(task.id===id){task.deleted=!task.deleted;}return task;});setTasks(deletedNotes);window.localStorage.setItem(\"notes\",JSON.stringify(deletedNotes));};useEffect(function(){var savedTasks=JSON.parse(localStorage.getItem(\"notes\"));if(savedTasks)setTasks(savedTasks);},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavbarNotes,{number:tasks}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Searcher,{searcher:searcherInfo}),/*#__PURE__*/_jsxs(\"div\",{className:\" notelist\",children:[/*#__PURE__*/_jsx(NewNote,{onSubmit:addTask}),tasks.map(function(task){return/*#__PURE__*/_jsx(Note,{id:task.id,text:task.text,deleted:task.deleted,date:task.date,deleteNote:deleteNote,className:task.deleted?\"deleted\":\"\",color:task.color,editNote:editNote},task.id);})]})]})]});};export default NoteList;","map":{"version":3,"sources":["E:/proyectos-web/react-sticky-notes/src/components/NoteList.js"],"names":["React","useEffect","useState","NavbarNotes","NewNote","Note","AiOutlinePlusCircle","Searcher","NoteList","tasks","setTasks","addTask","task","text","trim","updtatedTasks","window","localStorage","setItem","JSON","stringify","searcherInfo","textsearch","savedTasks","parse","getItem","results","filter","toLowerCase","includes","editNote","note","noteToChange","map","id","color","deleteNote","deletedNotes","deleted","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NavbarNotes from \"./NavbarNotes\";\r\nimport NewNote from \"./NewNote\";\r\nimport Note from \"./Note\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport \"./noteList.css\";\r\nimport Searcher from \"./Searcher\";\r\n\r\nconst NoteList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const addTask = (task) => {\r\n    if (task.text.trim()) {\r\n      task.text = task.text.trim();\r\n      const updtatedTasks = [task, ...tasks];\r\n      setTasks(updtatedTasks);\r\n      window.localStorage.setItem(\"notes\", JSON.stringify(updtatedTasks));\r\n    }\r\n  };\r\n  const searcherInfo = (textsearch) => {\r\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\r\n    if (savedTasks) setTasks(savedTasks);\r\n    if (textsearch) {\r\n      const results = savedTasks.filter((task) =>\r\n        task.text.toLowerCase().includes(textsearch)\r\n      );\r\n      setTasks(results);\r\n    }\r\n  };\r\n  const editNote = (note) => {\r\n    const noteToChange = tasks.map((task) => {\r\n      if (task.id === note.id) {\r\n        task.text = note.text;\r\n        task.color = note.color;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(noteToChange);\r\n    window.localStorage.setItem(\"notes\", JSON.stringify(noteToChange));\r\n  };\r\n\r\n  const deleteNote = (id) => {\r\n    const deletedNotes = tasks.map((task) => {\r\n      if (task.id === id) {\r\n        task.deleted = !task.deleted;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(deletedNotes);\r\n    window.localStorage.setItem(\"notes\", JSON.stringify(deletedNotes));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\r\n    if (savedTasks) setTasks(savedTasks);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <NavbarNotes number={tasks} />\r\n      <div className=\"container\">\r\n        <Searcher searcher={searcherInfo} />\r\n        <div className=\" notelist\">\r\n          <NewNote onSubmit={addTask} />\r\n          {tasks.map((task) => (\r\n            <Note\r\n              key={task.id}\r\n              id={task.id}\r\n              text={task.text}\r\n              deleted={task.deleted}\r\n              date={task.date}\r\n              deleteNote={deleteNote}\r\n              className={task.deleted ? \"deleted\" : \"\"}\r\n              color={task.color}\r\n              editNote={editNote}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {/* <button className=\"new-note-fixed\">\r\n        <AiOutlinePlusCircle size={40} />\r\n      </button> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n"]},"metadata":{},"sourceType":"module"}