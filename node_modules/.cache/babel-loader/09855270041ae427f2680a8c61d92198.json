{"ast":null,"code":"var _jsxFileName = \"E:\\\\proyectos-web\\\\react-sticky-notes\\\\src\\\\Pages\\\\PaperBin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NavbarNotes from \"../components/NavbarNotes\";\nimport Note from \"../components/Note\";\nimport { BiTrash } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaperBin = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [delTasks, setDelTasks] = useState([]);\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\n    setTasks(savedTasks);\n    const delNotes = savedTasks.filter(task => task.deleted);\n    if (delNotes) setDelTasks(delNotes);\n  }, []);\n\n  const restoreNote = id => {\n    const restoredNotes = delTasks.map(task => {\n      if (task.id === id) {\n        task.deleted = !task.deleted;\n      }\n\n      return task;\n    });\n    setDelTasks(restoredNotes);\n    window.localStorage.setItem(\"notes\", JSON.stringify(restoredNotes));\n  };\n\n  const deletePerm = id => {\n    if (window.confirm(\"Are you sure you want to delete this note permanently?\")) {\n      let newNotesArray = delTasks.filter(note => note.id !== id);\n      setDelTasks(newNotesArray);\n      window.localStorage.setItem(\"notes\", JSON.stringify(newNotesArray));\n    }\n  };\n\n  const deleteAllNotes = () => {\n    if (window.confirm(\"Are you sure you want to delete all this notes?\")) {\n      const newArrayNotes = tasks.filter(task => !task.deleted);\n      setDelTasks(newArrayNotes);\n      window.localStorage.setItem(\"notes\", JSON.stringify(newArrayNotes));\n    }\n  };\n\n  console.log(delTasks);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarNotes, {\n      number: delTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" notelist\",\n        children: delTasks.map(task => /*#__PURE__*/_jsxDEV(Note, {\n          id: task.id,\n          text: task.text,\n          deleted: task.deleted,\n          deleteNote: restoreNote,\n          className: task.deleted ? \"note\" : \"note deleted\",\n          deletePerm: deletePerm,\n          date: task.date,\n          color: task.color\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), delTasks.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-note-fixed\",\n        children: /*#__PURE__*/_jsxDEV(BiTrash, {\n          size: 60,\n          onClick: deleteAllNotes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your PaperBin is Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(PaperBin, \"LiEprJgk7VAgJ0d0nuNNcGm7ZJY=\");\n\n_c = PaperBin;\nexport default PaperBin;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaperBin\");","map":{"version":3,"sources":["E:/proyectos-web/react-sticky-notes/src/Pages/PaperBin.js"],"names":["React","useEffect","useState","NavbarNotes","Note","BiTrash","PaperBin","tasks","setTasks","delTasks","setDelTasks","savedTasks","JSON","parse","localStorage","getItem","delNotes","filter","task","deleted","restoreNote","id","restoredNotes","map","window","setItem","stringify","deletePerm","confirm","newNotesArray","note","deleteAllNotes","newArrayNotes","console","log","text","date","color","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NavbarNotes from \"../components/NavbarNotes\";\r\nimport Note from \"../components/Note\";\r\nimport { BiTrash } from \"react-icons/bi\";\r\n\r\nconst PaperBin = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [delTasks, setDelTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\r\n    setTasks(savedTasks);\r\n    const delNotes = savedTasks.filter((task) => task.deleted);\r\n    if (delNotes) setDelTasks(delNotes);\r\n  }, []);\r\n\r\n  const restoreNote = (id) => {\r\n    const restoredNotes = delTasks.map((task) => {\r\n      if (task.id === id) {\r\n        task.deleted = !task.deleted;\r\n      }\r\n      return task;\r\n    });\r\n    setDelTasks(restoredNotes);\r\n    window.localStorage.setItem(\"notes\", JSON.stringify(restoredNotes));\r\n  };\r\n  const deletePerm = (id) => {\r\n    if (\r\n      window.confirm(\"Are you sure you want to delete this note permanently?\")\r\n    ) {\r\n      let newNotesArray = delTasks.filter((note) => note.id !== id);\r\n      setDelTasks(newNotesArray);\r\n      window.localStorage.setItem(\"notes\", JSON.stringify(newNotesArray));\r\n    }\r\n  };\r\n  const deleteAllNotes = () => {\r\n    if (window.confirm(\"Are you sure you want to delete all this notes?\")) {\r\n      const newArrayNotes = tasks.filter((task) => !task.deleted);\r\n      setDelTasks(newArrayNotes);\r\n      window.localStorage.setItem(\"notes\", JSON.stringify(newArrayNotes));\r\n    }\r\n  };\r\n  console.log(delTasks);\r\n\r\n  return (\r\n    <>\r\n      <NavbarNotes number={delTasks} />\r\n      <div className=\"container\">\r\n        <div className=\" notelist\">\r\n          {delTasks.map((task) => (\r\n            <Note\r\n              key={task.id}\r\n              id={task.id}\r\n              text={task.text}\r\n              deleted={task.deleted}\r\n              deleteNote={restoreNote}\r\n              className={task.deleted ? \"note\" : \"note deleted\"}\r\n              deletePerm={deletePerm}\r\n              date={task.date}\r\n              color={task.color}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {delTasks.length ? (\r\n        <>\r\n          <button className=\"new-note-fixed\">\r\n            <BiTrash size={60} onClick={deleteAllNotes} />\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h1>Your PaperBin is Empty</h1>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaperBin;\r\n"]},"metadata":{},"sourceType":"module"}