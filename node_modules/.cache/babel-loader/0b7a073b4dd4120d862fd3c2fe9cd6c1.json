{"ast":null,"code":"var _jsxFileName = \"E:\\\\proyectos-web\\\\react-sticky-notes\\\\src\\\\components\\\\NoteList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewNote from \"./NewNote\";\nimport Note from \"./Note\";\nimport \"./noteList.css\";\nimport Searcher from \"./Searcher\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteList = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = task => {\n    if (task.text.trim()) {\n      task.text = task.text.trim();\n      const updtatedTasks = [task, ...tasks];\n      setTasks(updtatedTasks);\n      window.localStorage.setItem(\"notes\", JSON.stringify(updtatedTasks));\n    }\n  };\n\n  const searcherInfo = textsearch => {\n    if (textsearch) {\n      const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\n      if (savedTasks) setTasks(savedTasks);\n      const results = tasks.filter(task => task.text.toLowerCase().includes(textsearch));\n      console.log(results);\n      setTasks(results);\n    }\n  };\n\n  const editNote = note => {\n    const noteToChange = tasks.map(task => {\n      if (task.id === note.id) {\n        task.text = note.text;\n        task.color = note.color;\n      }\n\n      console.log(note.text);\n      return task;\n    });\n    setTasks(noteToChange);\n    window.localStorage.setItem(\"notes\", JSON.stringify(noteToChange));\n  };\n\n  const deleteNote = id => {\n    const deletedNotes = tasks.map(task => {\n      if (task.id === id) {\n        task.deleted = !task.deleted;\n      }\n\n      return task;\n    });\n    setTasks(deletedNotes);\n    window.localStorage.setItem(\"notes\", JSON.stringify(deletedNotes));\n  };\n\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\n    if (savedTasks) setTasks(savedTasks);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Searcher, {\n      searcher: searcherInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" notelist\",\n      children: [/*#__PURE__*/_jsxDEV(NewNote, {\n        onSubmit: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Note, {\n        id: task.id,\n        text: task.text,\n        deleted: task.deleted,\n        date: task.date,\n        deleteNote: deleteNote,\n        className: task.deleted ? \"deleted\" : \"\",\n        color: task.color,\n        editNote: editNote\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = NoteList;\nexport default NoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"sources":["E:/proyectos-web/react-sticky-notes/src/components/NoteList.js"],"names":["React","useEffect","useState","NewNote","Note","Searcher","NoteList","tasks","setTasks","addTask","task","text","trim","updtatedTasks","window","localStorage","setItem","JSON","stringify","searcherInfo","textsearch","savedTasks","parse","getItem","results","filter","toLowerCase","includes","console","log","editNote","note","noteToChange","map","id","color","deleteNote","deletedNotes","deleted","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NewNote from \"./NewNote\";\r\nimport Note from \"./Note\";\r\nimport \"./noteList.css\";\r\nimport Searcher from \"./Searcher\";\r\n\r\nconst NoteList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const addTask = (task) => {\r\n    if (task.text.trim()) {\r\n      task.text = task.text.trim();\r\n      const updtatedTasks = [task, ...tasks];\r\n      setTasks(updtatedTasks);\r\n      window.localStorage.setItem(\"notes\", JSON.stringify(updtatedTasks));\r\n    }\r\n  };\r\n  const searcherInfo = (textsearch) => {\r\n    if (textsearch) {\r\n      const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\r\n      if (savedTasks) setTasks(savedTasks);\r\n      const results = tasks.filter((task) =>\r\n        task.text.toLowerCase().includes(textsearch)\r\n      );\r\n      console.log(results);\r\n      setTasks(results);\r\n    }\r\n  };\r\n  const editNote = (note) => {\r\n    const noteToChange = tasks.map((task) => {\r\n      if (task.id === note.id) {\r\n        task.text = note.text;\r\n        task.color = note.color;\r\n      }\r\n      console.log(note.text);\r\n      return task;\r\n    });\r\n    setTasks(noteToChange);\r\n    window.localStorage.setItem(\"notes\", JSON.stringify(noteToChange));\r\n  };\r\n\r\n  const deleteNote = (id) => {\r\n    const deletedNotes = tasks.map((task) => {\r\n      if (task.id === id) {\r\n        task.deleted = !task.deleted;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(deletedNotes);\r\n    window.localStorage.setItem(\"notes\", JSON.stringify(deletedNotes));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedTasks = JSON.parse(localStorage.getItem(\"notes\"));\r\n    if (savedTasks) setTasks(savedTasks);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Searcher searcher={searcherInfo} />\r\n      <div className=\" notelist\">\r\n        <NewNote onSubmit={addTask} />\r\n        {tasks.map((task) => (\r\n          <Note\r\n            key={task.id}\r\n            id={task.id}\r\n            text={task.text}\r\n            deleted={task.deleted}\r\n            date={task.date}\r\n            deleteNote={deleteNote}\r\n            className={task.deleted ? \"deleted\" : \"\"}\r\n            color={task.color}\r\n            editNote={editNote}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n"]},"metadata":{},"sourceType":"module"}